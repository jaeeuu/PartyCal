name: CI/CD Pipeline

concurrency: 
  group: production
  cancel-in-progress: true

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4.1.7

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        run_install: false

    - name: Setup Node.js
      uses: actions/setup-node@v4.0.3
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Build Front-end
      run: |
        pnpm install
        pnpm run build
        cd src-back
      
    - name: Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1.9.0
      with:
        target: 'x86_64-unknown-linux-gnu'

    - name: Build Back-end
      run: |
        cargo build --release

    - name: Package Release Files
      run: |
        cd ..
        mkdir -p release/partycal
        cp -rf .output/public/* release/partycal
        cp -f src-back/target/release/partyback release/partycal/partyback
        cd release
        tar -zcvf partycal.tar.gz partycal

    - name: Deploy to Server
      uses: easingthemes/ssh-deploy@v5.1.0
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        REMOTE_HOST: ${{ secrets.SSH_IP }}
        REMOTE_USER: ${{ secrets.SSH_USER_NAME }}
        REMOTE_PORT: ${{ secrets.SSH_PORT }}
        SOURCE: "release/partycal.tar.gz"
        TARGET: "/opt/partycal.tar.gz"
        SCRIPT_BEFORE: |
          rm -rf /opt/ramdisk/*
          rm -rf /opt/partycal/*
          rm -f /usr/bin/partyback
        SCRIPT_AFTER: |
          tar -zxvf /opt/partycal.tar.gz -C /opt
          mv /opt/partycal/partyback /usr/bin/partyback
          rm -f /opt/partycal.tar.gz
          nginx -s reload
          # systemctl restart partyback
